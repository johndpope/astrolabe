%!PS-Adobe-2.0
%%Title: astrolabe.ps
%%Creator: Jürgen Schuck
%%EndComments

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Hinweise:
%%   Die Datei astrolabe.ps erzeugt der Makroprozessor m4 aus
%%   astrolabe.in. Die .in-Datei soll daher nach Möglichkeit keine
%%   Postscript-Literale enthalten, die mit Bezeichnungen von
%%   m4-builtin-Makros übereinstimmen. Anderenfalls ermöglicht es die
%%   Kommandozeilenoption --undefine=<MACRO> das angegebene Makro
%%   auszublenden. Eine Liste der m4-builtin-Makros findet sich in [7].
%%
%%   Shell-Kommando für nicht-komprimierte DIN A4 Seiten (pageSize)
%%   bei 1000x1000 mm Blattgröße (canvasSize):
%%      for p in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ; do \
%%        $GS -d.page=$p -d.pageScale=.95 -d".pageSize={A4}" -d".canvasSize={1000 1000}" \
%%          -sDEVICE=pdfwrite -dCompressPages=false -sOutputFile=astrolabe-$p.pdf \
%%             -dBATCH -dNOPAUSE astrolabe.ps ; done
%%
%% Quellen:
%%   [1]  Jean Meeus, Astronomische Algorithmen, 2. Auflage.
%%   [2]  Oliver Montenbruck, Grundlagen der Ephemeridenrechnung,
%%        6. aktualisierte und erweiterte Auflage.
%%   [3]  Adobe Systems, The Postscript Language, Tutorial and Cookbook,
%%        http://www-cdf.fnal.gov/offline/PostScript/BLUEBOOK.PDF .
%%   [4]  Ghostscript 7.04 Distribution, Datei ps_guide.ps.
%%   [5]  Hame, Sphärische Trigonometrie.
%%   [6]  Hilbert, Wir wiederholen - Räumliche Geometrie.
%%   [7]  The GNU m4 Manual, http://www.gnu.org/software/m4/manual/m4.pdf .
%%   [8]  Einführung in die Astronomie und Astrophysik,
%%        http://www.kis.uni-freiburg.de/~ovdluhe/Lehre/Einfuehrung/E1/Einf_1_3.html
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Universell verwendbare Parameter und Prozeduren.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/generalDict 128 dict def
generalDict begin

%%%
% Variablen.
%%%

% Voreinstellung Teilungsverhältnis Metrische Einheit/Welteinheit = 1/1.
/MCUPerWCU 1 def
%!! Variablen.

%%%
% Parameter.
%%%

% DIN-Formate.
/A0 {841 1189} def % Vierfachbogen.
/A1 {594 841} def  % Doppelbogen.
/A2 {420 594} def  % Bogen (Einfachbogen).
/A3 {297 420} def  % Halbbogen.
/A4 {210 297} def  % Viertelbogen.
/A5 {148 210} def  % Blatt (Achtelbogen).
/A6 {105 148} def  % Halbblatt.
/A7 {74 105} def   % Viertelblatt.
/A8 {52 74} def    % Achtelblatt.

/B0 {1000 1414} def
/B1 {707 1000} def
/B2 {500 707} def
/B3 {353 500} def
/B4 {250 353} def
/B5 {176 250} def
/B6 {125 176} def
/B7 {88 125} def
/B8 {62 88} def

/C0 {917 1297} def
/C1 {648 917} def
/C2 {458 648} def
/C3 {324 458} def
/C4 {229 324} def
/C5 {162 229} def
/C6 {114 162} def
/C7 {81 114} def
/C8 {57 81} def

% Null und Unendlich für trigonometrische Funktionen.
/nul 10e-37 def
/inf 10e+37 def

/mmPerInch 25.4 def

/pi 3.14159265 def
%!! Parameter.

%%%
% Prozeduren.
%%%

% <fontname> adjustISOLatin1Encoding -
/adjustISOLatin1Encoding {dup findfont dup length dict begin {1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def currentdict end exch dup length string cvs (-ISOLatin1) strcat cvlit exch
	definefont pop} def

% <text> <text> strcat <text>
/strcat {exch 2 copy length dup 5 1 roll exch length add string
	dup dup 6 2 roll exch 0 exch putinterval putinterval} def
% stringheight <WCU>
/stringheight {gsave newpath 0 0 moveto (A) false charpath flattenpath pathbbox [ 5 2 roll cleartomark grestore} def

/Sqrt {dup 0 lt {pop 0} if sqrt} def
/Sin {sin dup 0 eq {pop nul} if} def
/Cos {cos dup 0 eq {pop nul} if} def
/tan {dup Sin exch Cos div} def
/cot {dup Cos exch Sin div} def
/asin {dup dup mul 1 exch sub Sqrt Atan} def
/acos {asin 90 exch sub} def
/Atan {dup 0 eq {pop nul} if atan} def

% Metrische Einheit nach Welteinheit konvertieren.
/convMCU2WCU {MCUPerWCU div} def

% Welteinheit nach Geräteeinheit konvertieren. Ist hier (Postscript)
% voreingestellte Einheit des Anwenderkoordinatensystems 1/72 Zoll.
/convWCU2PCU {MCUPerWCU mul mmPerInch div 72 mul} def
%!! Prozeduren.

end % generalDict
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Prozeduren zur Beschriftung beliebig geformter Pfade [3], S. 173.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/pathtextDict 64 dict def
pathtextDict begin

%%%
% Variablen.
%%%

% Bool'scher Wert true für Outline-Font.
/ptOutlineFont false def
%!! Variablen.

%%%
% Prozeduren.
%%%

%%%
% <text> <position> ptShow -
%
% Beschriftung entlang aktuellem Pfad ab Position. Das Dictionary
% ist von ghostscriptDict abhängig.
%
% Parameter:
%   <text>     : Beschriftungstext. Feld von Feldern zur Beschreibung
%              : einzelner Textabschnitte:
%              : [ [ <fontname> <fontsize> <position> true true <text> ] ... ]
%   <position> : Beginn der Beschriftung in WCU.
%
% Ergebnis:
%   -
%
% Verwendete Variablen und Prozeduren:
%   _f[xy]   : Startkoordinaten (first X/Y).
%   _n[xy]   : Folgekoordinaten (next X/Y).
%   _c[xy]   : Aktuelle Koordinaten (current X/Y).
%   _o[xy]   : Vorherige Koordinaten (old X/Y).
%   _os[xy]* : Textüberhang vom Pfadsegment (overshot).
%   _rpl     : Länge des Pfadsegments (relative path length).
%   _t       : Beschriftungstext.
%   _td      : Textdistanz (text distance).
%   _pd      : Pfaddistanz (path distance).
%   _c       : Einzelnes Zeichen des Beschriftungstextes (character).
%   _nc      : Aktuelle Zeichenposition im Beschriftungstext.
%   _cw      : Zeichenbreite (character width).
%   _sc      : Schreibe Zeichen (set character).
%   _ti      : Zeichenkettenindex (text index).
%   _ci      : Zeichenindex (character index).
%%%

/ptShow {/_td exch def /_t exch def
	/_pd 0 def /_nc 0 def gsave flattenpath {/_fy exch def /_fx exch def /_nx _fx def /_ny _fy def
	/_os 0 def _fx _fy transform /_cy exch def /_cy exch def} {/_ox _nx def /_oy _ny def /_ny exch def
	/_nx exch def /_dx _nx _ox sub def /_dy _ny _oy sub def /_rpl _dx dup mul _dy dup mul add sqrt def
	_rpl 0 ne {/_osx _dx _rpl div _os mul def /_osy _dy _rpl div _os mul def _ox _osx add _oy _osy add
	transform /_cy exch def /_cx exch def /_pd _pd _rpl add def {_td _pd le {_nc _t gsLength lt {_sc}
	{exit} ifelse} {/_os _td _pd sub def exit} ifelse} loop } if} {} {_fx _fy lineto _fx _fy moveto}
	pathforall grestore} def

/_sc {_t _nc 1 add gsIndices /_ci exch def /_ti exch def /_c _t _ti get 5 get _ci 1 getinterval def
	/_nc _nc 1 add def gsave _t _ti get 0 get findfont _t _ti get 1 get scalefont setfont /_cw _c
	stringwidth pop def _cx _cy itransform translate _dy _dx Atan rotate 0 _t _ti get 2 get moveto
	_c ptOutlineFont {gsave [] 0 setdash lineWidthCanonical setlinewidth currentpoint newpath moveto false charpath stroke grestore}
	{show} ifelse currentpoint _t _ti get 2 get sub transform /_cy exch def /_cx exch def grestore
	/_td _td _cw add def} def
%!! Prozeduren.

end % pathtextDict
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Enhanced Postscript Funktionalität [4].
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/ghostscriptDict 128 dict def
ghostscriptDict begin

%%%
% Parameter.
%%%

% Skalierungsfaktor für Sub-/Superscript.
/gsSmallScale .8 def

% Verschiebung der Grundlinie für Sub-/Superscript in Anteilen (Faktor) vom normalen Font.
/gsSubPosition -0.3 def
/gsSuperPosition .5 def
%!! Parameter.

%%%
% Prozeduren.
%%%

%%%
% <array> gsShow -
%
% Darstellung eines Textes mit mehreren Schriftarten
% und -größen auf wechselnden Grundlinien.
% Ermöglicht Verwendung lateinischer und griechischer Buchstaben
% sowie Super- und Subscript innerhalb desselben Textes.
%
% Parameter:
%   <array> : Feld von Feldern zur Beschreibung einzelner Textabschnitte:
%           : [ [ <fontname> <fontsize> <position> true true <text> ] ... ]
%
% Ergebnis:
%   -
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/gsShow {{dup dup 0 get findfont exch 1 get scalefont setfont [currentpoint] exch dup 2 get 0 exch
	rmoveto dup dup 5 get exch 4 get {show} {stringwidth pop 0 rmoveto} ifelse dup 3 get {2 get neg
	0 exch rmoveto pop} {pop aload pop moveto} ifelse} forall} def
     
%%%
% <array> gsStringWidth <width>
%
% Breite eines Textes mit wechselnden Schriftarten
% (Siehe Prozedur gsShow) ermitteln.
%
% Parameter:
%   <array> : Feld von Feldern zur Beschreibung einzelner Textabschnitte:
%           : [ [ <fontname> <fontsize> <position> true true <text> ] ... ]
%
% Ergebnis:
%   <width> : Breite des Textes in WCU.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/gsStringWidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont 5 get stringwidth
	pop add} {pop} ifelse} forall} def

%%%
% <array> gsLength <length>
%
% Anzahl der Zeichen eines Textes mit wechselnden
% Schriftarten (Siehe Prozedur gsShow) ermitteln.
%
% Parameter:
%   <array> : Feld von Feldern zur Beschreibung einzelner Textabschnitte:
%           : [ [ <fontname> <fontsize> <position> true true <text> ] ... ]
%
% Ergebnis:
%   <length> : Anzahl der Zeichen.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/gsLength {0 exch {5 get length add} forall} def

%%%
% <array> <position> gsIndices <string> <char>
%
% Ermittlung von Zeichenketten- und Zeichenindex
% für Zeichenposition.
%
% Parameter:
%   <array>    : Feld von Feldern zur Beschreibung einzelner Textabschnitte:
%              : [ [ <fontname> <fontsize> <position> true true <text> ] ... ]
%   <position> : Zeichenposition ab 1.
%
% Ergebnis:
%   <string> : Zeichenkettenindex.
%   <char>   : Zeichenindex.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/gsIndices {exch 0 exch 0 exch {5 get length dup 3 1 roll add dup 4 index ge
	{exch sub 2 index exch sub 1 sub exit} {exch pop exch 1 add exch} ifelse} forall 3 2 roll pop} def

% <array> <array> gsStrCat <array>
/gsStrCat {[ 3 1 roll exch {} forall counttomark dup 1 sub roll {} forall ]} def
%!! Prozeduren.

end % ghostscriptDict
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Elementare und für die Art der Anwendung spezifische Parameter
% und Prozeduren.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/astrolabeDict 128 dict def
astrolabeDict begin

%%%
% Parameter.
%%%

% Äquatorradius in WCU.
/rEq .5 def

% Deklination des galaktischen Nordpols, B1950.0, [1], S. 101.
/deGa 27.4 def
/deGaDV {deGa convD2Ddv} def

% Schiefe der Ekliptik.
/obEc findE0(getVar(epoch)) def
/obEcDV {obEc convD2Ddv} def
/obGa 90 deGa sub def

% 0h Sternzeit.
/stNull 0 def
/stNullDV {stNull convD2Tdv} def

% 12h Sternzeit.
/stNoon 180 def
/stNoonDV {stNoon convD2Tdv} def

% Rektaszension des ekliptischen Nordpols.
/raEc 270 def
/raEcDV {raEc convD2Tdv} def

% Rektaszension des galaktischen Nordpols, B1950.0, [1], S. 101.
/raGa 192.25 def
/raGaDV {raGa convD2Tdv} def
% Zentrum des galaktischen Pols, [8].
/raGaCenter 265.6 def
/deGaCenter -28.916667 def

/laNPole 90 def
/laNPoleDV {laNPole convD2Ddv} def
/laEc 90 obEc sub def
/laGa deGa def

/alNPCircle 90 obEc sub def
/alNPCircleDV {alNPCircle convD2Ddv} def
/alNTCircle obEc def
/alNTCircleDV {alNTCircle convD2Ddv} def
/alSTCircle obEc -1 mul def
/alSTCircleDV {alSTCircle convD2Ddv} def

/alSunsetSunrise -0.883 def
/alSunsetSunriseDV {alSunsetSunrise convD2Ddv} def
/alCivilTwilight -6 def
/alCivilTwilightDV {alCivilTwilight convD2Ddv} def
/alNauticalTwilight -12 def
/alNauticalTwilightDV {alNauticalTwilight convD2Ddv} def
/alAstronomicalTwilight -18 def
/alAstronomicalTwilightDV {alAstronomicalTwilight convD2Ddv} def
%!! Parameter.

%%%
% Prozeduren.
%%%

%%%
% <h> <m> <s> convTdv2D <d>
% <d> <m> <s> convDdv2D <d>
%
% Umwandlung diskreter Werte für Stunde, Minute, Sekunde
% in Winkelgrade als Dezimalbruch. Desgleichen für Grad,
% Minute, Sekunde.
%
% Parameter:
%   <h> : Stunden, ganze Zahl.
%   <d> : Grade, ganze Zahl.
%   <m> : Minuten, ganze Zahl.
%   <s> : Sekunden, Dezimalbruch.
%
% Ergebnis:
%   <d> : Winkelgrade.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/convTdv2D {3600 div exch 60 div add add 15 mul} def
/convDdv2D {1 dict begin /_n false def dup 0 lt {/_n true def abs} if 3600 div exch
	dup 0 lt {/_n true def abs} if 60 div add exch dup 0 lt {/_n true def abs} if add _n {-1 mul} if end} def

%%%
% <d> convD2Tdv <h> <m> <s>
% <d> convD2Ddv <d> <m> <s>
%
% Umkehrfunktionen von convTdv2D und convDdv2d.
%%%

/findH {15 div cvi} def
/findM {15 div dup cvi sub 60 mul cvi} def
/findS {15 div dup cvi sub 3600 mul dup 60 div cvi 60 mul sub} def
/findD {cvi} def
/findDM {dup cvi sub 60 mul cvi} def
/findDS {dup cvi sub 3600 mul dup 60 div cvi 60 mul sub} def

/prepDTdv {10 mul round 10 div 2 index 0 lt {abs exch abs exch} {1 index 0 lt {abs} if} ifelse} def

/convD2Tdv {dup findH exch dup findM exch findS prepDTdv} def
/convD2Ddv {dup findD exch dup findDM exch findDS prepDTdv} def

%%%
% <x1> <y1> <x2> <y2> vecAdd <x> <y>
% <x1> <y1> <x2> <y2> vecSub <x> <y>
%           <x>  <y>  vecLen <WCU>
%      <x>  <y>  <a>  vecMul <x> <y>
%
% Zweidimensionale Vektoralgebra.
%%%

/vecAdd {3 2 roll add 3 1 roll add exch} def
/vecSub {-1 mul exch -1 mul exch vecAdd} def
/vecLen {dup mul exch dup mul add Sqrt} def
/vecMul {dup 3 2 roll mul exch 3 2 roll mul exch} def

%%%
% <de> projStereoPolar <r>
%  <r> projStereoPolarI <de>
%
% Stereopolarprojektion einer Deklination auf die Äquatorbene
% und Umkehrfunktion.
%   r = tan((180-(90+de))/2)*rEq =>
%   r = tan(180-90-de)/2)*rEq    =>
%   r = tan((90-de)/2)*rEq
%
%   de = 90-atan(r/rEq,1)*2
%
% Parameter:
%   <de> : Deklination in Grad.
%
% Ergebnis:
%   <r> : Radius auf Äquatorebene in WCU.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/projStereoPolar {90 exch sub 2 div tan rEq mul} def
/projStereoPolarI {rEq div 1 Atan 2 mul 90 exch sub} def

%%%
% <de> <ra> convEqC2WC <x> <y>
%
% Umwandlung von Äquatorkoordinaten in Weltkoordinaten.
%   x = projStereoPolar(de)*cos(ra)
%   y = projStereoPolar(de)*sin(ra)*-1
%
% Parameter:
%   <de> : Deklination.
%   <ra> : Rektaszension.
%
% Ergebnis:
%   <x> : Abszisse.
%   <y> : Ordinate.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/convEqC2WC {2 copy Cos exch projStereoPolar mul 3 1 roll Sin exch projStereoPolar mul -1 mul} def

%%%
% <la> <al> <az> convHoC2EqC <de> <ra>
%
% Umwandlung von Horizontkoordinaten in Äquatorkoordinaten.
% Seitencosinussatz (Deklination) [1], S. 101.
%   cos(90-de) = cos(90-la)*cos(90-al)+sin(90-la)*sin(90-al)*cos(180-az) =>
%      sin(de) = sin(la)*sin(al)-cos(la)*cos(al)*cos(az)                 =>
%           de = asin(sin(la)*sin(al)-cos(la)*cos(al)*cos(az))
%
%      tan(ra) = sin(az)/(cos(az)*sin(la)+tan(al)*cos(la))               =>
%           ra = 360-atan(sin(az)/(cos(az)*sin(la)+tan(al)*cos(la)))
%
% Parameter:
%   <la> : Terrestrische Breite (latitude).
%   <al> : Höhe (altitude).
%   <az> : Azimuth.
%
% Ergebnis:
%   <de> : Deklination.
%   <ra> : Rektaszension.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%
	
/convHoC2EqC {3 dict begin /_az exch def /_al exch def /_la exch def
	_la Sin _al Sin mul _la Cos _al Cos mul _az Cos mul sub asin 360
	_az Sin _az Cos _la Sin mul _al tan _la Cos mul add Atan sub end} def

%%%
% <st> <la> <al> <az> convHoC2WC <x> <y>
%
% Umwandlung von Horizontkoordinaten in Weltkoordinaten
% mit Berücksichtigung der Sternzeit.
%   de,ra = convHoC2EqC(la,al,az)
%     x,y = convEqC2WC(de,ra+st)
%
% Parameter:
%   <st> : Sternzeit (sidereal time).
%   <la> : Terrestrische Breite (latitude).
%   <al> : Höhe (altitude).
%   <az> : Azimuth.
%
% Ergebnis:
%   <x> : Abszisse in WCU.
%   <y> : Ordinate in WCU.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/convHoC2WC {convHoC2EqC 3 2 roll add convEqC2WC} def

%%%
% <la> <az> findAzTilt <tilt>
% <la> <az> findRAShift <shift>
%
% Neigung eines Azimuthgroßkreises zum Äquator und
% Rektaszensionsverschiebung auf Äquatorebene.
% Neppersche Regel.
%    cos(tilt) = sin(90-az)*cos(la)      =>
%    cos(tilt) = cos(az)*cos(la)         =>
%         tilt = acos(cos(az)*cos(la))
%
%   cos(shift) = cot(tilt)*tan(la)       =>
%        shift = acos(cot(tilt)*tan(la))
%
% Parameter:
%   <la> : Terrestrische Breite (latitude).
%   <az> : Azimuth.
%
% Ergebnis:
%   <tilt>  : Neigungswinkel zum Äquator in Grad.
%   <shift> : Verschiebung auf Äquatorebene in Grad.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findAzTilt {Cos exch Cos mul acos} def
/findRAShift {2 copy findAzTilt cot exch pop exch tan mul acos} def

%%%
% <la> <az> <de> findAzDeIntersection <al>
% Höhe eines Schnittpunkts von Azimuth und Deklination [5], S. 67.
%
% Parameter:
%   <la> : Terrestrische Breite (latitude).
%   <az> : Azimuth.
%   <de> : Deklination.
%
% Ergebnis:
%   <al>  : Höhe des Schnittpunkts (altitude).
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findAzDeIntersection {3 dict begin /_de exch def /_az exch 180 exch sub def /_la exch def
	_la Sin _de Sin mul _la Cos _de Cos mul _az Cos mul 1 _az Sin _la Cos mul _de Cos div dup
	mul sub Sqrt mul sub 1 _la Cos dup mul _az Sin dup mul mul sub div acos 90 exch sub end} def

%%%
% <la> <al> <de> findAlDeIntersection <az>
% Azimuth eines Schnittpunkts von Höhe und Deklination [6], S. 80.
%
% Parameter:
%   <la> : Terrestrische Breite (latitude).
%   <al> : Höhe (altitude).
%   <de> : Deklination.
%
% Ergebnis:
%   <az>  : Azimuth des Schnittpunkts.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findAlDeIntersection {3 dict begin /_de exch def /_al exch def /_la exch def
	_de Sin _al Sin _la Sin mul sub _al Cos _la Cos mul div acos 180 add end} def

%%%
%          <st> <la> <al> <az> findAzTangent <angle>
% <st> <la> <al> <az> <offset> findAzNormalOffset <x> <y>
%             <x> <y> <offset> findWCNormalOffset <x> <y>
%
% Bestimmung des Tangentenwinkels bei Azimuth (lim 1/1000).
% Ermittlung von Vektoren mit ursprünglicher Länge plus Abstand.
%   _x,_y = vecSub(convHoC2WC(st,la,al,az),convHoC2WC(st,la,al,az-1/1000))
%   angle = atan(_y,_x)
%
%   _x,_y = convHoC2WC(st,la,al,az)
%       x = _x+cos(findAzTangent(st,la,al,az)+90)*offset
%       y = _y+sin(findAzTangent(st,la,al,az)+90)*offset
%
%       x = x+cos(atan(y,x))*offset
%       y = y+sin(atan(y,x))*offset
%
% Parameter:
%   <st>     : Sternzeit (sidereal time).
%   <la>     : Terrestrische Breite (latitude).
%   <al>     : Höhe (altitude).
%   <az>     : Azimuth.
%   <offset> : Abstand auf Normaler in WCU.
%
% Ergebnis:
%   <angle> : Tangentenwinkel.
%       <x> : Abszisse in WCU.
%       <y> : Ordinate in WCU.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findAzTangent {4 copy convHoC2WC 6 2 roll .001 sub convHoC2WC vecSub exch Atan} def
/findAzNormalOffset {5 1 roll 4 copy convHoC2WC 7 2 roll findAzTangent
	90 add 2 copy Cos mul 3 1 roll Sin mul vecAdd} def
/findWCNormalOffset {3 1 roll 2 copy 5 2 roll exch Atan 2 copy Cos mul 3 1 roll Sin mul vecAdd} def

%%%
% <de> <offset> findDeOffset <de>
% Deklination mit Abstand zum Wert des Parameters.
%   de = projStereoPolarI(projStereoPolar(de)+offset)
%
% Parameter:
%       <de> : Deklination.
%   <offset> : Abstand in WCU.
%
% Ergebnis:
%   <de> : Deklination.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findDeOffset {exch projStereoPolar add projStereoPolarI} def

%%%
% <st> <la> <al> <az> <offset> findAlParallelArcLen <length>
% Bogenlänge einer Höhenparallelen bis Azimuth (lim 1/4).
%
% Parameter:
%   <st>     : Sternzeit (sidereal time).
%   <la>     : Terrestrische Breite (latitude).
%   <al>     : Höhe (altitude).
%   <az>     : Azimuth.
%   <offset> : Abstand auf Normaler in WCU.
%
% Ergebnis:
%   <length> : Bogenlänge in WCU.
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/findAlParallelArcLen {5 dict begin /_dn exch def /_az exch def /_al exch def /_la exch def /_st exch def
	0 _st _la _al _az _dn findAzNormalOffset {_az nul gt {/_az _az .25 sub def _st _la _al _az _dn
	findAzNormalOffset 2 copy 7 2 roll vecSub vecLen add 3 1 roll} {exit} ifelse} loop pop pop end} def
%!! Prozeduren.

end % astrolabeDict
%
%%EndProlog
%%Page: 1 1

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% START: Anwendung.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

generalDict begin
pathtextDict begin
ghostscriptDict begin
astrolabeDict begin

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Variablen.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%
% Kommandozeilenvariablen.
%%%

% Druckseitennummer ab 0.
/.page where {pop} {/.page 0 def} ifelse

% Druckseitengröße.
/.pageSize where {pop} {/.pageSize {A0} def} ifelse

% Skalierungsfaktor der Druckseite. Für Klebekante Werte <1.
/.pageScale where {pop} {/.pageScale 1 def} ifelse

% Zeichenblattgröße.
/.canvasSize where {pop} {/.canvasSize {A0} def} ifelse
%!! Kommandozeilenvariablen.

/pageSize {.pageSize} def
/manualFeed false def

% Größe des Zeichenblattes.
/canvasSize {.canvasSize} def

% Abbildung von MCU auf WCU. Abszisse entspricht 2WCU.
/MCUPerWCU canvasSize pop 2 div def

/stdGap 1 convMCU2WCU def

/epoch getVar(epoch) def
/epochWD findWeekDay(getVar(epoch)) def
/epoch1stSunday 7 epochWD sub 7 mod def
/epoch1stMonday 1 epochWD sub 7 add 7 mod def
/epoch1stTuesday 2 epochWD sub 7 add 7 mod def
/epoch1stWednesday 3 epochWD sub 7 add 7 mod def
/epoch1stThursday 4 epochWD sub 7 add 7 mod def
/epoch1stFriday 5 epochWD sub 7 add 7 mod def
/epoch1stSaturday 6 epochWD sub 7 add 7 mod def

/epochRaDays [ listLo0Sun(dictEntry(scaleDaysDict, fineScaleSteps)) ] def
/epochCDays [ listCDays(getVar(epoch)) ] def
/epochMonths [ listLo0Sun2 ] def

/epochRaTrDays [ listRaTrSun(dictEntry(scaleDaysTrDict, fineScaleSteps)) ] def

/stHome getVar(stHome) def
/laHome getVar(laHome) def
/loHome getVar(loHome) def
%!! Variablen.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Parameter.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/pathAlDir true def
/pathAlDirRev false def

/alCPCircleDV {38 31 0.0} def
/alCPCircle 90 laHome sub def

/lineWidthCanonical .1 convMCU2WCU def
/lineWidthCardinal .5 convMCU2WCU def

/colourConst .85 def
/colourGa .75 def
/colourEc .5 def

/clipEqS -28 def
/clipEqN 85 def
/clipHoN 85 def
/clipEcN 85 def
/clipGaN 85 def
/clipGaS -85 def

/scaleHoDict 32 dict def
scaleHoDict begin
% Schritte pro Einheit auf der Feinskala.
	/fineScaleSteps 4 def
% Stärke der Feinskala
	/fineScaleWidth -2 convMCU2WCU def
% Länge der Einerteilstriche.
	/1Len -2 convMCU2WCU def
% Stärke der Einerteilstriche.
	/1Width .1 convMCU2WCU def
% Länge der Fünferteilstriche.
	/5Len -3 convMCU2WCU def
% Stärke der Fünferteilstriche.
	/5Width .1 convMCU2WCU def
% Länge der Zehnerteilstriche.
	/10Len -4 convMCU2WCU def
% Stärke der Zehnerteilstriche.
	/10Width .2 convMCU2WCU def
% Schriftgröße der Fünferteilstriche.
	/5FontSize 2.5 convMCU2WCU def
% Schriftgröße der Zehnerteilstriche.
	/10FontSize 4 convMCU2WCU def
% Schriftart, Standard.
	/fontName /Times-Roman-ISOLatin1 def
% Schriftart, Kursiv.
	/fontNameItalic /Times-Italic-ISOLatin1 def
% Schriftart, Symbole.
	/fontNameSymbol /Symbol def
% Schriftabstand von Fünferteilstrichen.
	/5LabelGap -2.5 convMCU2WCU def
% Schriftabstand von Zehnerteilstrichen.
	/10LabelGap -4 convMCU2WCU def
% Skalenbeschriftung.
	/legendAzText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (Azimuth)]
		[fontNameItalic 5FontSize 0 true true ( A )]
		[fontName 5FontSize 0 true true (\(1\260/15'\))]] def
% Beschriftungsabstand vom Skalenrand.
	/legendAzGap -9 convMCU2WCU def
% Skalenposition an der die Beschriftung beginnt.
	/legendAzPos 2.5 def
	/legendAlText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (H\366he)]
		[fontNameItalic 5FontSize 0 true true ( h)]] def
	/legendAlGap stdGap 2 div def
	/legendAlPos 15 def
% Deklination der Bezugslinie auf der Skalierung abgetragen wird.
	/baseline clipEqS def
% Abstand der Skalierung von der Bezugslinie.
	/baselineOffset 0 def
% Seitenlänge der Dreieicke zur Markierung der Himmelsrichtungen.
	/compassRoseTriangleLen -3 convMCU2WCU def
% Abstand der Windrose vom Skalenrand.
	/compassRoseTriangleGap -11 convMCU2WCU def
% Abstand der Windrosenbeschriftung von compassRoseTriangleGap.
	/compassRoseLabelGap -8 convMCU2WCU def
end % scaleHoDict

/scaleLtDict 32 dict def
scaleLtDict begin
	/fineScaleSteps 2 def
	/fineScaleWidth 2 convMCU2WCU def
	/1Len 2 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len 3 convMCU2WCU def
	/5Width .1 convMCU2WCU def
	/10Len 4 convMCU2WCU def
	/10Width .15 convMCU2WCU def
	/5FontSize 2.5 convMCU2WCU def
	/10FontSize 4 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameItalic /Times-Italic-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/5LabelGap 2 convMCU2WCU def
	/10LabelGap stdGap def
	/legendText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (Ortszeit)]
		[fontName 5FontSize 0 true true (\(5)]
		[fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (m)]
		[fontName 5FontSize 0 true true (/150)]
		[fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (s)]
		[fontName 5FontSize 0 true true (\))]] def
	/legendGap 8 convMCU2WCU def
	/legendPos 188 def
	/baseline clipEqS def
	/baselineOffset stdGap def
end % scaleLtDict

/scaleEqDict 32 dict def
scaleEqDict begin
	/fineScaleSteps 2 def
	/fineScaleWidth -2 convMCU2WCU def
	/1Len -2 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len -3 convMCU2WCU def
	/5Width .1 convMCU2WCU def
	/10Len -4 convMCU2WCU def
	/10Width .15 convMCU2WCU def
	/5FontSize 2.5 convMCU2WCU def
	/10FontSize 4 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameItalic /Times-Italic-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/5LabelGap -2.5 convMCU2WCU def
	/10LabelGap -4 convMCU2WCU def
	/legendRaText [[fontName 5FontSize 0 true true (Rektaszension)]
		[fontNameSymbol 5FontSize 0 true true ( a )]
		[fontName 5FontSize 0 true true (\(5)]
		[fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (m)]
		[fontName 5FontSize 0 true true (/150)]
		[fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (s)]
		[fontNameSymbol 5FontSize 0 true true (\) \256)]] def
	/legendRaGap -9 convMCU2WCU def
	/legendRaPos 1.25 def
	/legendDeText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (Deklination)]
		[fontNameSymbol 5FontSize 0 true true ( d)]] def
	/legendDeGap stdGap 2 div def
	/legendDePos -15 def
	/baseline clipEqS def
	/baselineOffset 21.5 convMCU2WCU def
end % scaleEqDict

/scaleEqDDict 32 dict def
scaleEqDDict begin
	/fineScaleSteps 4 def
	/fineScaleWidth 2 convMCU2WCU def
	/1Len 2 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len 3 convMCU2WCU def
	/5Width .1 convMCU2WCU def
	/10Len 4 convMCU2WCU def
	/10Width .15 convMCU2WCU def
	/5FontSize 2.5 convMCU2WCU def
	/10FontSize 4 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameItalic /Times-Italic-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/5LabelGap 2.5 convMCU2WCU def
	/10LabelGap stdGap def
	/legendText [[fontName 5FontSize 0 true true (Rektaszension)]
		[fontNameSymbol 5FontSize 0 true true ( a )]
		[fontName 5FontSize 0 true true (\(1\260/15'\))]
		[fontNameSymbol 5FontSize 0 true true ( \256)]] def
	/legendGap 8 convMCU2WCU def
	/legendPos 1 def
	/baseline clipEqS def
	/baselineOffset 22.5 convMCU2WCU def
end % scaleEqDDict

/scaleDaysTrDict 32 dict def
scaleDaysTrDict begin
%	/fineScaleSteps <n> def ACHTUNG: Relevanter Wert in astrolabe.bc
	/fineScaleWidth -2 convMCU2WCU def
	/1Len -3.5 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len -5.5 convMCU2WCU def
	/5Width .15 convMCU2WCU def
	/1FontSize 2 convMCU2WCU def
	/5FontSize 4 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/1LabelGap 3.5 convMCU2WCU stdGap add -1 mul def
	/5LabelGap stdGap -1 mul def
	/legendText [[fontName 1FontSize 0 true true (Wahre Tagteilung)]
		[fontName 1FontSize 0 true true ( \(1)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (d)]
		[fontName 1FontSize 0 true true (/6)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (h)]
		[fontName 1FontSize 0 true true (\), Zeitgleichung \(L)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSubPosition mul true true (0)]
		[fontName 1FontSize 0 true true ( - L)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSubPosition mul true true (wahr)]
		[fontName 1FontSize 0 true true (\) 12:00 UT)]
		[fontNameSymbol 1FontSize 0 true true ( \256)]] def
% MCU.
	/legendGap -14 convMCU2WCU def
% Rektaszension.
	/legendPos findRaTrSun(convCd2Jd(2, 1, findCYear(getVar(epoch)))) def
	/baseline clipEqS def
% baselineOffset von scaleEqDict + Goldener Schnitt...
	/baselineOffset 21.5 dup 5 sqrt 1 add 2 div mul add convMCU2WCU def
end % scaleDaysTrDict

/scaleDaysDict 32 dict def
scaleDaysDict begin
%	/fineScaleSteps <n> def ACHTUNG: Relevanter Wert in astrolabe.bc
	/fineScaleWidth 2 convMCU2WCU def
	/1Len 3.5 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len 5.5 convMCU2WCU def
	/5Width .15 convMCU2WCU def
	/10Len 10 convMCU2WCU def
	/10Width .5 convMCU2WCU def
	/1FontSize 2 convMCU2WCU def
	/5FontSize 4 convMCU2WCU def
	/10FontSize 6 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/1LabelGap 3.5 convMCU2WCU stdGap add def
	/5LabelGap stdGap def
	/10LabelGap 2 convMCU2WCU def
	/legendText [[fontName 1FontSize 0 true true (Mittlere Tagteilung)]
		[fontName 1FontSize 0 true true ( \(1)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (d)]
		[fontName 1FontSize 0 true true (/6)]
		[fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (h)]
		[fontName 1FontSize 0 true true (\))]
		[fontNameSymbol 1FontSize 0 true true ( \256)]] def
% MCU.
	/legendGap 13 convMCU2WCU def
% Rektaszension.
	/legendPos findLo0Sun(convCd2Jd(4, 1, findCYear(getVar(epoch)))) def
	/baseline clipEqS def
% baselineOffset von scaleEqDict + stdGap + Goldener Schnitt...
	/baselineOffset 21.5 dup 5 sqrt 1 add 2 div mul add convMCU2WCU stdGap add def
	/baselineOffset2 baselineOffset 18 convMCU2WCU add def
end % scaleDaysDict

/scaleEcDict 32 dict def
scaleEcDict begin
	/fineScaleSteps 4 def
	/1Len 2 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len 3 convMCU2WCU def
	/5Width .1 convMCU2WCU def
	/10Len 4 convMCU2WCU def
	/10Width .15 convMCU2WCU def
	/5FontSize 2.5 convMCU2WCU def
	/10FontSize 2.5 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameItalic /Times-Italic-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/10LabelGap -1 convMCU2WCU def
	/legendLoText [[fontName 5FontSize 0 true true (Ekliptische L\344nge)]
		[fontNameSymbol 5FontSize 0 true true ( l )]
		[fontName 5FontSize 0 true true (\(1\260\))]
		[fontNameSymbol 5FontSize 0 true true ( \256)]] def
	/legendLoGap stdGap 5FontSize add def
	/legendLoPos 92 def
	/legendLaText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (Ekliptische Breite)]
		[fontNameSymbol 5FontSize 0 true true ( b)]] def
	/legendLaGap stdGap 1.5 mul def
	/legendLaPos 266 def
end % scaleEcDict

/scaleGaDict 32 dict def
scaleGaDict begin
	/fineScaleSteps 4 def
	/1Len 2 convMCU2WCU def
	/1Width .1 convMCU2WCU def
	/5Len 3 convMCU2WCU def
	/5Width .1 convMCU2WCU def
	/10Len 4 convMCU2WCU def
	/10Width .15 convMCU2WCU def
	/5FontSize 2.5 convMCU2WCU def
	/10FontSize 2.5 convMCU2WCU def
	/fontName /Times-Roman-ISOLatin1 def
	/fontNameItalic /Times-Italic-ISOLatin1 def
	/fontNameSymbol /Symbol def
	/10LabelGap -1 convMCU2WCU def
	/legendLoText [[fontName 5FontSize 0 true true (Galaktische L\344nge l )]
		[fontName 5FontSize 0 true true (\(1\260\))]
		[fontNameSymbol 5FontSize 0 true true ( \256)]] def
	/legendLoGap stdGap 5FontSize add def
	/legendLoPos 2.6 def
	/legendLaText [[fontNameSymbol 5FontSize 0 true true (\254 )]
		[fontName 5FontSize 0 true true (Galaktische Breite b )]] def
	/legendLaGap stdGap 5FontSize add def
	/legendLaPos 242.5 def
end % scaleGaDict

/annotationDict 32 dict def
annotationDict begin
% Schriftart, Standard.
	/fontName /Times-Roman-ISOLatin1 def
% Schriftart, Kursiv.
	/fontNameItalic /Times-Italic-ISOLatin1 def
% Schriftart, Symbole.
	/fontNameSymbol /Symbol def
% Schriftgröße.
	/fontSize 4 convMCU2WCU def
% Abstand von Grundlinie bei Beschriftung oberhalb.
	/posGap stdGap def
% Abstand von Grundlinie bei Beschriftung unterhalb.
	/negGap {stringheight posGap add -1 mul} def
% Beschriftungen.
	/annotNPCircle (N \366 r d l i c h e r  P o l a r k r e i s) def
	/annotCPCircle (Z i r k u m p o l a r k r e i s) def
	/annotNTCircle (N \366 r d l i c h e r  S o n n e n w e n d e k r e i s) def
	/annotEq (\304 q u a t o r) def
	/annotSTCircle (S \374 d l i c h e r  S o n n e n w e n d e k r e i s) def
	/annotEc (E k l i p t i k) def
	/annotHo (H o r i z o n t) def
	/annotGa (M i l c h s t r a \337 e) def
	/annotSunset (S o n n e n a u f g a n g) def
	/annotSunrise (S o n n e n u n t e r g a n g) def
	/annotCivilTwilight (B \374 r g e r l i c h e  D \344 m m e r u n g) def
	/annotNauticalTwilight (N a u t i s c h e  D \344 m m e r u n g) def
	/annotAstronomicalTwilight (A s t r o n o m i s c h e  D \344 m m e r u n g) def
	/annotAzN (NORD) def
	/annotAzO (OST) def
	/annotAzS (S\334D) def
	/annotAzW (WEST) def
	/annotAzNO (NORDOST) def
	/annotAzSO (S\334DOST) def
	/annotAzSW (S\334DWEST) def
	/annotAzNW (NORDWEST) def
% Wochentage.
	/annotWeekdays [ (So) (Mo) (Di) (Mi) (Do) (Fr) (Sa) ] def
% Monate.
	/annotMonths [ (J a n u a r) (F e b r u a r) (M \344 r z) (A p r i l) (M a i) (J u n i)
			(J u l i) (A u g u s t) (S e p t e m b e r) (O k t o b e r) (N o v e m b e r) (D e z e m b e r) ] def
end % annotationDict


/constDict 12 dict def
constDict begin
% Schriftart, Standard.
	/fontName /Helvetica-ISOLatin1 def
% Schriftgröße bei 0 Grad Deklination.
	/fontSize 8 convMCU2WCU def
	/fontSizeMin 4 convMCU2WCU def
	/fontSizeMax 12 convMCU2WCU def
% Schriftgröße bei x Grad Deklination.
	% <min> <max> <size> <de> findFontSizeDe
	/findFontSizeDe {90 exch sub 2 div tan mul 2 copy lt {pop exch pop} {exch pop 2 copy gt {pop} {exch pop} ifelse} ifelse} def
% Outline-Font verwenden.
	/ptOutlineFont true def
end % constDict
%!! Parameter.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Prozeduren.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%
% <st> <la> <al> <az> <distance> <direction> <resolution> pathAlParallel -
%
% Berechnung des Pfads einer Höhenparallelen.
%
% Parameter:
%   <st>         : Sternenzeit (sidereal time).
%   <la>         : Terrestrischer Breitengrad (latitude).
%   <al>         : HoC Höhengrad (altitude).
%   <az>         : HoC Längengrad (azimuth).
%   <distance>   : Abstand der Parallelen vom Höhengrad in WCU.
%   <direction>  : Boolscher Wert; true für Fortschritt in Azimuthrichtung.
%   <resolution> : Winkelauflösung in Azimuthschritten pro Grad.
%
% Ergebnis:
%   -
%
% Verwendete Variablen und Prozeduren:
%   _ar : Winkelauflösung (angle resolution).
%   _dn : Abstand der Parallelen (distance).
%%%

/pathAlParallel {/_ar exch def exch /_dn exch def exch /_az exch def exch /_al exch def exch /_la exch def exch /_st exch def
	_st _la _al _az _dn findAzNormalOffset moveto {1 1 360 _ar mul 1 sub} {360 _ar mul 1 sub -1 1} ifelse
	{/_azi exch _ar div def _st _la _al _az _azi add _dn findAzNormalOffset lineto} for closepath} def
	
%%%
% <st> <la> <al> pathAlCircle -
%
% Berechnung des Pfades einer Höhenlinie im Uhrzeigersinn
% mit einer Winkelauflösung von 1 Grad bei 0 Grad Azimut
% beginnend.
%
% Parameter:
%   <st>         : Sternenzeit (sidereal time).
%   <la>         : Terrestrischer Breitengrad (latitude).
%   <al>         : HoC Höhengrad (altitude).
%
% Ergebnis:
%   -
%
% Verwendete Variablen und Prozeduren:
%   -
%%%

/pathAlCircle {0 0 pathAlDir 1 pathAlParallel} def

%%%
% <h> <m> <s> <fontname> <fontsize> strTime <array> [ <array> , ... ]
% <d> <m> <s> <fontname> <fontsize> strAngle <array> [ <array> , ... ]
%
% 
%%%

/strTime {2 dict begin /_fs exch def /_fn exch def 
	[_fn _fs 0 true true 9 8 roll 4 string cvs] [_fn _fs gsSmallScale mul _fs gsSuperPosition mul true true (h)]
	4 2 roll dup nul gt {[_fn _fs 0 true true 8 7 roll 4 string cvs] [_fn _fs gsSmallScale mul _fs gsSuperPosition mul true true (m)]
	[_fn _fs 0 true true 9 8 roll 4 string cvs] [_fn _fs gsSmallScale mul _fs gsSuperPosition mul true true (s)]}
	{pop dup nul gt {[_fn _fs 0 true true 7 6 roll 4 string cvs] [_fn _fs gsSmallScale mul _fs gsSuperPosition mul true true (m)]} {pop} ifelse} ifelse	end} def
/strAngle {2 dict begin /_fs exch def /_fn exch def
	[_fn _fs 0 true true 9 8 roll 4 string cvs (\260) strcat] 3 1 roll dup nul gt {[_fn _fs 0 true true 8 7 roll 4 string cvs (') strcat]
	[_fn _fs 0 true true 8 7 roll round cvi 16 string cvs (") strcat]} {pop dup nul gt {[_fn _fs 0 true true 7 6 roll 4 string cvs (') strcat]} {pop} ifelse} ifelse	end} def
%!! Prozeduren.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Anwendung.
%
% 1. Linien.
% 2. Skalierungen.
% 3. Beschriftungen.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<
/PageSize
	[pageSize convMCU2WCU convWCU2PCU round cvi exch convMCU2WCU convWCU2PCU round cvi exch]
/ImagingBBox
	null
/ManualFeed
	manualFeed
>> setpagedevice

gsave % Outmost.

1 convWCU2PCU 1 convWCU2PCU scale 

/pageCountX canvasSize pop pageSize pop .pageScale mul div .99 add cvi def
/pageCountY canvasSize exch pop pageSize exch pop .pageScale mul div .99 add cvi def

[ 0 1 pageCountY 1 sub {pageSize exch pop .pageScale mul mul canvasSize exch pop 2 div cvi exch sub dup
	0 1 pageCountX 1 sub {pageSize pop .pageScale mul mul canvasSize pop 2 div cvi exch sub exch [ 3 1 roll ] exch dup} for pop pop} for ]

.page get {} forall convMCU2WCU exch convMCU2WCU exch translate

/Helvetica adjustISOLatin1Encoding
/Times-Roman adjustISOLatin1Encoding
/Times-Italic adjustISOLatin1Encoding

lineWidthCanonical setlinewidth

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Linien.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%
% Deklinationslinien.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip
gsave % START: Clipping Himmelspol.
stNull laNPole clipEqN pathAlCircle eoclip

-80 10 80 {newpath stNull exch 90 exch pathAlCircle stroke} for

%%%
% Rektaszensionslinien.
%%%

0 15 165 {newpath 0 0 pathAlCircle stroke} for

%%%
% Konstellationen.
%%%

constDict begin
gsave colourConst setgray
include(constproc)
grestore % colourConst
end % constDict

grestore % ENDE: Clipping Himmelspol.

%%%
% Kardinallinien.
%
% 1. Nördlicher Polarkreis,
% 2. Zirkumpolarkreis,
% 3. Nördlicher Sonnenwendekreis,
% 4. Äquator,
% 5. Südlicher Sonnenwendekreis,
% 6. Ekliptik,
% 7. Milchstraße (Galaxis) und
% 8. Horizont.
%%%

gsave lineWidthCardinal setlinewidth
newpath stNull laNPole alNPCircle pathAlCircle stroke
newpath stNull laNPole alCPCircle pathAlCircle stroke
newpath stNull laNPole alNTCircle pathAlCircle stroke
newpath stNull laNPole 0 pathAlCircle stroke
newpath stNull laNPole alSTCircle pathAlCircle stroke
gsave colourEc setgray newpath raEc laEc 0 pathAlCircle stroke grestore
gsave colourGa setgray newpath raGa laGa 0 pathAlCircle stroke grestore
newpath stHome laHome 0 pathAlCircle stroke
grestore % lineWidthCardinal

%%%
% Höhenlinien.
%%%

10 10 80 {newpath stHome exch laHome exch pathAlCircle stroke} for

%%%
% 1. Sonnenaufgang/Sonnenuntergang.
% 2. Bürgerliche Dämmerung.
% 3. Nautische Dämmerung.
% 4. Astronomische Dämmerung.
%%%

newpath stHome laHome alSunsetSunrise pathAlCircle stroke
newpath stHome laHome alCivilTwilight pathAlCircle stroke
newpath stHome laHome alNauticalTwilight pathAlCircle stroke
newpath stHome laHome alAstronomicalTwilight pathAlCircle stroke
grestore % ENDE: Clipping Äusserer Himmel.

%%%
% Azimuthlinien.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip
gsave % START: Clipping Zenit.
stHome laHome clipHoN pathAlCircle eoclip

newpath stHome -90 laHome add 0 pathAlCircle stroke
10 10 80 {dup laHome exch findAzTilt exch laHome exch findRAShift 2 copy
	newpath stHome add exch -90 exch add 0 pathAlCircle stroke
	newpath stHome exch sub exch -90 exch add 0 pathAlCircle stroke
} for
newpath 90 stHome add 0 0 pathAlCircle stroke

grestore % ENDE: Clipping Zenit.
grestore % ENDE: Clipping Äusserer Himmel.

%%%
% Galaktische Breitenlinien.
%%%

gsave colourGa setgray

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip

-80 10 -10 {newpath raGa exch laGa exch pathAlCircle stroke} for
10 10 80 {newpath raGa exch laGa exch pathAlCircle stroke} for

grestore % ENDE: Clipping Äusserer Himmel.

%%%
% Galaktische Längenlinien.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip

gsave % START: Clipping galaktischer Nordpol.
raGa laGa clipGaN pathAlCircle eoclip
gsave % START: Clipping galaktischer Südpol.
raGa laGa clipGaS pathAlCircle eoclip

%newpath raGa -90 laGa add 0 pathAlCircle stroke
newpath raGa -90 laGa add 0 laGa 0 deGaCenter findAlDeIntersection 0 pathAlDir 1 pathAlParallel stroke
10 10 80 {dup laGa exch findAzTilt exch laGa exch findRAShift 2 copy
%	newpath raGa add exch -90 exch add 0 pathAlCircle stroke
%	newpath raGa exch sub exch -90 exch add 0 pathAlCircle stroke
	newpath raGa add exch -90 exch add 0 laGa 0 deGaCenter findAlDeIntersection 0 pathAlDir 1 pathAlParallel stroke
	newpath raGa exch sub exch -90 exch add 0 laGa 0 deGaCenter findAlDeIntersection 0 pathAlDir 1 pathAlParallel stroke
} for
%newpath 90 raGa add 0 0 pathAlCircle stroke
newpath 90 raGa add 0 0 laGa 0 deGaCenter findAlDeIntersection 0 pathAlDir 1 pathAlParallel stroke

grestore % ENDE: Clipping galaktischer Südpol.
grestore % ENDE: Clipping galaktischer Nordpol.

grestore % ENDE: Clipping Äusserer Himmel.

grestore % colourGa

%%%
% Ekliptische Breitenlinien.
%%%

gsave colourEc setgray

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip

-80 10 -10 {newpath raEc exch laEc exch pathAlCircle stroke} for
10 10 80 {newpath raEc exch laEc exch pathAlCircle stroke} for

grestore % ENDE: Clipping Äusserer Himmel.

%%%
% Ekliptische Längenlinien.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip
gsave % START: Clipping ekliptischer Nordpol.
raEc laEc clipEcN pathAlCircle eoclip

newpath raEc -90 laEc add 0 pathAlCircle stroke
10 10 80 {dup laEc exch findAzTilt exch laEc exch findRAShift 2 copy
	newpath raEc add exch -90 exch add 0 pathAlCircle stroke
	newpath raEc exch sub exch -90 exch add 0 pathAlCircle stroke
} for
newpath 90 raEc add 0 0 pathAlCircle stroke

grestore % ENDE: Clipping ekliptischer Nordpol.
grestore % ENDE: Clipping Äusserer Himmel.

grestore % colourEc
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Skalierungen.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%
% START: Ekliptik.
%
% 1. Längenskala.
% 2. Breitenskala.
%%%

annotationDict begin
scaleEcDict begin
gsave fontName findfont setfont colourEc setgray

%%%
% Längenskala.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip

newpath raEc laEc 0 0 stdGap -1 mul findAzNormalOffset moveto

1 1 360 fineScaleSteps mul {dup /loi exch def /lo exch fineScaleSteps div def

	% Grundlinie.
	raEc laEc 0 lo stdGap -1 mul findAzNormalOffset lineto currentpoint stroke moveto

	% Ganzzahlige Gradwerte.	
	loi fineScaleSteps mod 0 eq {gsave raEc laEc 0 lo findAzTangent 180 add currentpoint translate rotate

		% 10er, 5er und 1er Skalenstriche.
		loi 10 fineScaleSteps mul mod 0 eq {lo cvi 360 mod 360 exch sub 270 add 360 mod 10FontSize 10LabelGap 10Len 10Width}
			{loi 5 fineScaleSteps mul mod 0 eq {5Len 5Width} {1Len 1Width} ifelse}
			ifelse setlinewidth 0 exch lineto

		% 10er Skalenbeschriftung.
		loi 10 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate stdGap 0 moveto
			currentfont exch scalefont setfont 3 string cvs (\260) strcat show} if stroke grestore} if} for

gsave newpath raEc laEc 0 0 legendLoGap pathAlDirRev 1 pathAlParallel
	legendLoText raEc laEc 0 legendLoPos legendLoGap findAlParallelArcLen ptShow grestore

%%%
% Breitenskala.
%%%

gsave currentfont 5FontSize scalefont setfont
10 10 60 {dup gsave raEc exch laEc exch 100 convHoC2WC translate
	dup raEc exch laEc exch 100 findAzTangent rotate stdGap 2 div dup moveto 4 string cvs (\260) strcat show grestore} for
-10 -10 -20 {dup gsave raEc exch laEc exch 100 convHoC2WC translate
	dup raEc exch laEc exch 100 findAzTangent rotate stdGap 2 div dup moveto 4 string cvs (\260) strcat show grestore} for
10 10 60 {dup gsave raEc exch laEc exch 260 convHoC2WC translate
	dup raEc exch laEc exch 260 findAzTangent rotate 4 string cvs (\260) strcat dup stringwidth pop stdGap 2 div add -1 mul stdGap 2 div moveto show grestore} for
-10 -10 -20 {dup gsave raEc exch laEc exch 260 convHoC2WC translate
	dup raEc exch laEc exch 260 findAzTangent rotate 4 string cvs (\260) strcat dup stringwidth pop stdGap 2 div add -1 mul stdGap 2 div moveto show grestore} for
grestore % currentfont

gsave newpath 10 dup laEc exch findAzTilt exch laEc exch findRAShift
	raEc exch sub exch -90 exch add 0 3 copy 0 legendLaGap pathAlDir 1 pathAlParallel
	legendLaPos legendLaGap findAlParallelArcLen legendLaText exch ptShow grestore

grestore % ENDE: Clipping Äusserer Himmel.

grestore % fontName
end % scaleEcDict

%%%
% ENDE: Ekliptik.
%%%

%%%
% START: Milchstraße.
%
% 1. Längenskala.
% 2. Breitenskala.
%%%

annotationDict begin
scaleGaDict begin
gsave fontName findfont setfont colourGa setgray

%%%
% Längenskala.
%%%

gsave % START: Clipping Äusserer Himmel.
stNull laNPole clipEqS pathAlCircle eoclip

newpath raGa laGa 0 laGa 0 deGaCenter findAlDeIntersection stdGap -1 mul findAzNormalOffset moveto

1 1 360 fineScaleSteps mul {dup /loi exch def /lo exch fineScaleSteps div def

	% Grundlinie.
	raGa laGa 0 laGa 0 deGaCenter findAlDeIntersection lo add stdGap -1 mul findAzNormalOffset lineto currentpoint stroke moveto

	% Ganzzahlige Gradwerte.	
	loi fineScaleSteps mod 0 eq {gsave raGa laGa 0 laGa 0 deGaCenter findAlDeIntersection lo add findAzTangent 180 add currentpoint translate rotate

		% 10er, 5er und 1er Skalenstriche.
		loi 10 fineScaleSteps mul mod 0 eq {lo cvi 360 mod 10FontSize 10LabelGap 10Len 10Width}
			{loi 5 fineScaleSteps mul mod 0 eq {5Len 5Width} {1Len 1Width} ifelse}
			ifelse setlinewidth 0 exch lineto

		% 10er Skalenbeschriftung.
		loi 10 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate stdGap 0 moveto
			currentfont exch scalefont setfont 3 string cvs (\260) strcat show} if stroke grestore} if} for

grestore % ENDE: Clipping Äusserer Himmel.

gsave newpath raGa laGa 0 laGa 0 deGaCenter findAlDeIntersection legendLoGap pathAlDirRev 1 pathAlParallel
	legendLoText raGa laGa 0 legendLoPos legendLoGap findAlParallelArcLen ptShow grestore

%%%
% Breitenskala.
%%%

gsave currentfont 5FontSize scalefont setfont
10 10 60 {dup gsave raGa exch laGa exch 100 convHoC2WC translate
	dup raGa exch laGa exch 100 findAzTangent rotate stdGap 2 div dup moveto 4 string cvs (\260) strcat show grestore} for
-10 -10 -60 {dup gsave raGa exch laGa exch 100 convHoC2WC translate
	dup raGa exch laGa exch 100 findAzTangent rotate stdGap 2 div dup moveto 4 string cvs (\260) strcat show grestore} for
grestore % currentfont

gsave newpath 10 dup laGa exch findAzTilt exch laGa exch findRAShift
	raGa exch sub exch -90 exch add 0 3 copy 0 legendLaGap pathAlDirRev 1 pathAlParallel
	legendLaPos legendLaGap findAlParallelArcLen legendLaText exch ptShow grestore

grestore % fontName
end % scaleGaDict

%%%
% ENDE: Milchstraße.
%%%

%%%
% START: Horizont.
%
% 1. Azimuthskala.
% 2. Ortszeitskala.
% 3. Windrose.
% 4. Höhenlinien.
%%%

scaleHoDict begin
gsave fontName findfont setfont

%%%
% Azimuthskala.
%%%

newpath stHome laHome dup 0 baseline baselineOffset findDeOffset findAzDeIntersection 0 convHoC2WC moveto

1 1 360 fineScaleSteps mul {dup /azi exch def /az exch fineScaleSteps div def

	% Eisenbahnmuster der Feinskalierung.
	stHome laHome dup az baseline baselineOffset findDeOffset findAzDeIntersection az convHoC2WC
	2 copy fineScaleWidth findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
	lineto lineto lineto currentpoint closepath azi 2 mod 0 eq {fill} {stroke} ifelse moveto

	% Ganzzahlige Gradwerte.	
	azi fineScaleSteps mod 0 eq {gsave currentpoint exch Atan 90 sub currentpoint
		fineScaleWidth findWCNormalOffset translate rotate

		% 10er, 5er und 1er Skalenstriche.
		azi 10 fineScaleSteps mul mod 0 eq {az cvi 360 mod 10FontSize 10LabelGap 10Len 10Width}
			{azi 5 fineScaleSteps mul mod 0 eq {5 5FontSize 5LabelGap 5Len 5Width} {1Len 1Width} ifelse}
			ifelse setlinewidth 0 exch lineto

		% 10er und 5er Skalenbeschriftung.
		azi 5 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate currentfont
			exch scalefont setfont 3 string cvs dup stringwidth exch -2 div exch moveto
			azi 10 fineScaleSteps mul mod 0 eq {(\260) strcat} if show} if stroke grestore} if} for

%%%
% Ortszeitskala.
%%%

scaleLtDict begin
gsave fontName findfont setfont

newpath baseline projStereoPolar baselineOffset add projStereoPolarI stHome stNoon add convEqC2WC moveto

1 1 24 12 mul fineScaleSteps mul {dup /rai exch def /ra exch 1.25 mul fineScaleSteps div def

	% Eisenbahnmuster der Feinskalierung.
	baseline baselineOffset findDeOffset ra stHome add stNoon add convEqC2WC 2 copy fineScaleWidth
		findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
		lineto lineto lineto currentpoint closepath rai 2 mod 0 eq {fill} {stroke} ifelse moveto

	% Ganzzahlige Gradwerte.
	rai fineScaleSteps mod 0 eq {gsave currentpoint exch Atan 90 sub currentpoint
		fineScaleWidth findWCNormalOffset translate rotate	

		% 12er, 6er und 2er Skalenstriche.
		rai 12 fineScaleSteps mul mod 0 eq {
			[ fontName 10FontSize 0 true true ra 15 div cvi 24 exch sub 24 mod 3 string cvs ] 10LabelGap 10Len 10Width}
			{rai 6 fineScaleSteps mul mod 0 eq {[ fontName 5FontSize 0 true true (30) ] 5LabelGap 5Len 5Width}
			{rai 2 fineScaleSteps mul mod 0 eq {5Len 1Width} {1Len 1Width} ifelse} ifelse} ifelse
			setlinewidth 0 exch lineto

		% 12er und 6er Skalenbeschriftung.
		rai 6 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate
			dup [ exch ] gsStringWidth -2 div 0 moveto rai 12 fineScaleSteps mul mod 0 eq
			{[ exch [ fontName 10FontSize gsSmallScale mul 10FontSize gsSuperPosition mul true true (h) ] ]}
			{[ exch [ fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (m) ] ]}
			ifelse gsShow} if stroke grestore} if} for

gsave stHome laHome dup legendPos baseline baselineOffset findDeOffset
	findAzDeIntersection legendPos convHoC2WC legendGap findWCNormalOffset 2 copy
	translate exch Atan 90 sub rotate legendText dup gsStringWidth -2 div 0 moveto gsShow grestore

grestore % fontName
end % scaleLtDict

%%%
% Windrose.
%%%

[[0 annotAzS] [0 22.5 add ()] [45 annotAzSW] [45 22.5 add ()]
[90 annotAzW] [90 22.5 add ()] [135 annotAzNW] [135 22.5 add ()]
[180 annotAzN] [180 22.5 add ()] [225 annotAzNO] [225 22.5 add ()]
[270 annotAzO] [270 22.5 add ()] [315 annotAzSO] [315 22.5 add ()]]
{dup /az exch 0 get def /t exch 1 get def

	% Ausgangsposition.
	gsave stHome laHome dup az baseline baselineOffset findDeOffset findAzDeIntersection az convHoC2WC
		compassRoseTriangleGap findWCNormalOffset 2 copy translate exch Atan rotate 0 0 moveto

	% Markierung.
	gsave -60 rotate 0 compassRoseTriangleLen lineto currentpoint translate
		-120 rotate 0 compassRoseTriangleLen lineto closepath az cvi 45 mod 0 eq {fill} {stroke} ifelse grestore

	% Beschriftung in 45 Gradabständen.
	az cvi 45 mod 0 eq {compassRoseLabelGap 0 translate -90 rotate currentfont 10FontSize scalefont setfont
		t stringwidth pop -2 div stdGap moveto t show} if grestore} forall

gsave stHome laHome dup legendAzPos baseline baselineOffset findDeOffset
	findAzDeIntersection legendAzPos convHoC2WC legendAzGap findWCNormalOffset 2 copy
	translate exch Atan 90 sub rotate legendAzText dup gsStringWidth -2 div 0 moveto gsShow grestore

%%%
% Höhenlinien.
%%%

gsave currentfont 5FontSize scalefont setfont
10 10 80 {dup gsave stHome exch laHome exch 40 convHoC2WC translate
	dup stHome exch laHome exch 40 findAzTangent 180 add rotate stdGap 2 div dup moveto 4 string cvs (\260) strcat show grestore} for
10 10 80 {dup gsave stHome exch laHome exch 320 convHoC2WC translate
	dup stHome exch laHome exch 320 findAzTangent 180 add rotate 4 string cvs (\260) strcat dup stringwidth pop stdGap 2 div add -1 mul stdGap 2 div moveto show grestore} for
grestore % currentfont

gsave stHome laHome legendAlPos 40 convHoC2WC translate stHome laHome legendAlPos 40 findAzTangent 90 add rotate
	legendAlText 0 legendAlGap moveto gsShow grestore

grestore % fontName
end % scaleHoDict
end % annotationDict

%%%
% ENDE: Horizont.
%%%
%
%%%
% START: Rektaszension.
%
% 1. Rektaszensionsskala.
% 2. Rektaszensionsskala in Gradteilung.
% 3. Deklinationslinien.
%%%

scaleEqDict begin
gsave fontName findfont setfont

%%%
% Rektaszensionsskala.
%%%

newpath baseline projStereoPolar baselineOffset add projStereoPolarI 0 convEqC2WC moveto

1 1 24 12 mul fineScaleSteps mul {dup /rai exch def /ra exch 1.25 mul fineScaleSteps div def

	% Eisenbahnmuster der Feinskalierung.
	baseline baselineOffset findDeOffset ra convEqC2WC 2 copy fineScaleWidth
		findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
		lineto lineto lineto currentpoint closepath rai 2 mod 0 eq {fill} {stroke} ifelse moveto

	% Ganzzahlige Gradwerte.
	rai fineScaleSteps mod 0 eq {gsave currentpoint exch Atan 90 sub currentpoint
		fineScaleWidth findWCNormalOffset translate rotate	

		% 12er, 6er und 2er Skalenstriche.
		rai 12 fineScaleSteps mul mod 0 eq {
			[ fontName 10FontSize 0 true true ra 15 div cvi 24 mod 3 string cvs ] 10LabelGap 10Len 10Width}
			{rai 6 fineScaleSteps mul mod 0 eq {[ fontName 5FontSize 0 true true (30) ] 5LabelGap 5Len 5Width}
			{rai 2 fineScaleSteps mul mod 0 eq {5Len 1Width} {1Len 1Width} ifelse} ifelse} ifelse
			setlinewidth 0 exch lineto

		% 12er und 6er Skalenbeschriftung.
		rai 6 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate
			dup [ exch ] gsStringWidth -2 div 0 moveto rai 12 fineScaleSteps mul mod 0 eq
			{[ exch [ fontName 10FontSize gsSmallScale mul 10FontSize gsSuperPosition mul true true (h) ] ]}
			{[ exch [ fontName 5FontSize gsSmallScale mul 5FontSize gsSuperPosition mul true true (m) ] ]}
			ifelse gsShow} if stroke grestore} if} for

gsave newpath stNull laNPole baseline baselineOffset legendRaGap add findDeOffset 0 0 pathAlDirRev 1 pathAlParallel
	legendRaText stNull laNPole baseline baselineOffset legendRaGap add findDeOffset legendRaPos 0 findAlParallelArcLen ptShow

%%%
% Rektaszensionsskala in Gradteilung.
%%%

scaleEqDDict begin
gsave fontName findfont setfont

newpath baseline projStereoPolar baselineOffset add projStereoPolarI 0 convEqC2WC moveto

1 1 360 fineScaleSteps mul {dup /rai exch def /ra exch fineScaleSteps div def

	% Eisenbahnmuster der Feinskalierung.
	baseline baselineOffset findDeOffset ra convEqC2WC 2 copy fineScaleWidth
		findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
		lineto lineto lineto currentpoint closepath rai 2 mod 0 eq {fill} {stroke} ifelse moveto

	% Ganzzahlige Gradwerte.	
	rai fineScaleSteps mod 0 eq {gsave currentpoint exch Atan 90 sub currentpoint
		fineScaleWidth findWCNormalOffset translate rotate

		% 10er, 5er und 1er Skalenstriche.
		rai 10 fineScaleSteps mul mod 0 eq {ra cvi 360 mod 10FontSize 10LabelGap 10Len 10Width}
			{rai 5 fineScaleSteps mul mod 0 eq {5 5FontSize 5LabelGap 5Len 5Width} {1Len 1Width} ifelse}
			ifelse setlinewidth 0 exch lineto

		% 10er und 5er Skalenbeschriftung.
		rai 5 fineScaleSteps mul mod 0 eq {0 exch currentpoint vecAdd translate currentfont
			exch scalefont setfont 3 string cvs dup stringwidth exch -2 div exch moveto
			rai 10 fineScaleSteps mul mod 0 eq {(\260) strcat} if show} if stroke grestore} if} for

gsave newpath stNull laNPole baseline baselineOffset legendGap add findDeOffset 0 0 pathAlDirRev 1 pathAlParallel
	legendText stNull laNPole baseline baselineOffset legendGap add findDeOffset legendPos 0 findAlParallelArcLen ptShow

grestore % fontName
end % scaleEqDDict

%%%
% Deklinationslinien.
%%%

gsave currentfont 5FontSize scalefont setfont
80 -10 10 {dup 0 90 360
	{gsave convEqC2WC 2 copy translate exch Atan 90 sub rotate stdGap 2 div dup moveto
		dup 4 string cvs (\260) strcat show grestore dup} for pop pop} for
0 -10 -20 {dup 0 45 360
	{gsave convEqC2WC 2 copy translate exch Atan 90 sub rotate stdGap 2 div dup moveto
		dup 4 string cvs (\260) strcat show grestore dup} for pop pop} for
grestore % currentfont

gsave legendDePos 0 convEqC2WC 2 copy translate exch Atan rotate
	legendDeText 0 legendDeGap moveto gsShow grestore

grestore % fontName
end % scaleEqDict

%%%
% ENDE: Rektaszension.
%%%
%
%%%
% START: Wahre Tagteilung.
%
% 1. Skala.
%%%

scaleDaysTrDict begin
gsave fontName findfont setfont

%%%
% Skala.
%%%

newpath epochRaTrDays dup 0 get baseline baselineOffset findDeOffset exch convEqC2WC moveto

dup length 1 sub 1 exch 1 exch {/rai exch def dup /ra exch rai get def /d rai dictEntry(scaleDaysTrDict, fineScaleSteps) div cvi def

	% Eisenbahnmuster der Feinskalierung.
	baseline baselineOffset findDeOffset ra convEqC2WC 2 copy fineScaleWidth
		findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
		lineto lineto lineto currentpoint closepath rai 2 mod 0 eq {fill} {stroke} ifelse moveto

	gsave currentpoint exch Atan 90 sub currentpoint fineScaleWidth findWCNormalOffset translate rotate

	% Tagteilung 0h.
	rai dictEntry(scaleDaysTrDict, fineScaleSteps) mod 0 eq {
		% Zeitgleichung.
		gsave currentfont 1FontSize scalefont setfont stdGap 1Len moveto
			%                                              12:00 UT.
			rai dictEntry(scaleDaysTrDict, fineScaleSteps) 2 div cvi sub dup epochRaDays exch get exch epochRaTrDays exch get sub
			dup 5 gt {360 sub} {dup -5 lt {360 add} if} ifelse [ exch
			dup [ exch fontName exch 1FontSize exch 0 exch true exch true exch findM 3 string cvs ] exch
			[ fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (m) ] exch
			[ exch fontName exch 1FontSize exch 0 exch true exch true exch findS abs cvi 2 string cvs ]
			[ fontName 1FontSize gsSmallScale mul 1FontSize gsSuperPosition mul true true (s) ]] gsShow grestore
		% Teilstriche der Sonntage.
		rai dictEntry(scaleDaysTrDict, fineScaleSteps) div cvi epoch1stSunday sub 7 mod 1 eq {
			5FontSize 5Len 5Width
		}
		% Teilstriche der übrigen Tage.
		{5FontSize gsSmallScale mul 1Len 1Width} ifelse
		gsave setlinewidth 0 exch lineto stroke grestore
		% Kalenderdaten.
		currentfont exch scalefont setfont epochCDays d 1 sub get 2 string cvs dup stringwidth pop -2 div stringheight -1 mul 5Len add 5LabelGap add moveto show
	} if
grestore} for pop

gsave newpath stNull laNPole baseline baselineOffset legendGap add findDeOffset 0 0 pathAlDirRev 1 pathAlParallel
	legendText stNull laNPole baseline baselineOffset legendGap add findDeOffset legendPos 0 findAlParallelArcLen ptShow

grestore % fontName
end % scaleDaysTrDict

%%%
% ENDE: Wahre Tagteilung.
%%%
%
%%%%
% START: Mittlere Tagteilung.
%
% 1. Skala.
% 2. Monate.
%%%

annotationDict begin
scaleDaysDict begin
gsave fontName findfont setfont

%%%
% Skala.
%%%

newpath epochRaDays dup 0 get baseline baselineOffset findDeOffset exch convEqC2WC moveto

dup length 1 sub 1 exch 1 exch {/rai exch def dup /ra exch rai get def /d rai dictEntry(scaleDaysDict, fineScaleSteps) div cvi def

	% Eisenbahnmuster der Feinskalierung.
	baseline baselineOffset findDeOffset ra convEqC2WC 2 copy fineScaleWidth
		findWCNormalOffset currentpoint fineScaleWidth findWCNormalOffset
		lineto lineto lineto currentpoint closepath rai 2 mod 0 eq {fill} {stroke} ifelse moveto

	gsave currentpoint exch Atan 90 sub currentpoint fineScaleWidth findWCNormalOffset translate rotate

	% Tagteilung 0h.
	rai dictEntry(scaleDaysDict, fineScaleSteps) mod 0 eq {
		% Namen der Wochentage.
		gsave currentfont 1FontSize scalefont setfont stdGap 1Len stringheight sub moveto
			d 1 sub 7 mod epochWD add 7 mod annotWeekdays exch get 2 string cvs show grestore
		% Teilstriche der Sonntage.
		rai dictEntry(scaleDaysDict, fineScaleSteps) div cvi epoch1stSunday sub 7 mod 1 eq {
			5FontSize 5Len 5Width
		}
		% Teilstriche der übrigen Tage.
		{5FontSize gsSmallScale mul 1Len 1Width} ifelse
		gsave setlinewidth 0 exch lineto stroke grestore
		% Kalenderdaten.
		currentfont exch scalefont setfont epochCDays d 1 sub get 2 string cvs dup stringwidth pop -2 div 5Len 5LabelGap add moveto show
	}
	% Tagteilung 12h.
	{rai dictEntry(scaleDaysDict, fineScaleSteps) 2 div cvi sub dictEntry(scaleDaysDict, fineScaleSteps) mod 0 eq {
		% Donnerstage radial mit Julianischem Datum beschriften.
		d epoch1stThursday sub 7 mod 0 eq {
			90 rotate currentfont 1FontSize scalefont setfont 1LabelGap stringheight -2 div moveto
			getVar(epoch) cvi d add 1 sub 8 string cvs show
		} if
	} if} ifelse
grestore} for

%%%
% Monate.
%%%

gsave currentfont 10FontSize scalefont setfont

gsave 0 1 11 {epochMonths exch get baseline baselineOffset2 findDeOffset exch convEqC2WC moveto
	currentpoint 10Len findWCNormalOffset 10Width setlinewidth lineto stroke} for grestore

0 1 11 {dup dup
	newpath epochMonths exch get dup baseline baselineOffset2 10LabelGap add findDeOffset exch convEqC2WC moveto
	cvi dup 1 exch 30 add {
		baseline baselineOffset2 10LabelGap add findDeOffset exch convEqC2WC lineto} for
	baseline baselineOffset2 10LabelGap add findDeOffset projStereoPolar pi mul 6 div exch annotMonths exch get stringwidth pop sub 2 div
	exch [ exch [ exch fontName exch 10FontSize exch 0 exch true exch true exch annotMonths exch get]] exch ptShow} for

grestore % currentfont

gsave newpath stNull laNPole baseline baselineOffset legendGap add findDeOffset 0 0 pathAlDirRev 1 pathAlParallel
	legendText stNull laNPole baseline baselineOffset legendGap add findDeOffset legendPos 0 findAlParallelArcLen ptShow

grestore % fontName
end % scaleDaysDict
end % annotationDict

%%%
% ENDE: Mittlere Tagteilung.
%%%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 3. Beschriftungen.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

annotationDict begin
gsave fontName findfont fontSize scalefont setfont

%%%
% Nördlicher Polarkreis.
%%%

[[fontName fontSize 0 true true annotNPCircle]
	[fontNameSymbol fontSize 0 true true (    d = )] alNPCircleDV fontName fontSize strAngle]
newpath stNull laNPole alNPCircle 0 posGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div stNull laNPole alNPCircle 270 posGap -1 mul findAlParallelArcLen exch sub ptShow

%%%
% Zirkumpolarkreis.
%%%

[[fontName fontSize 0 true true annotCPCircle]
	[/Symbol fontSize 0 true true (    d = )] alCPCircleDV fontName fontSize strAngle]
newpath stNull laNPole alCPCircle 0 posGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div stNull laNPole alCPCircle 270 posGap -1 mul findAlParallelArcLen exch sub ptShow

%%%
% Nördlicher Sonnenwendekreis.
%%%

[[fontName fontSize 0 true true annotNTCircle]
	[fontNameSymbol fontSize 0 true true (    d = )] alNTCircleDV fontName fontSize strAngle]
newpath stNull laNPole alNTCircle 0 posGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div stNull laNPole alNTCircle 322.5 posGap -1 mul findAlParallelArcLen exch sub ptShow

%%%
% Äquator.
%%%

[[fontName fontSize 0 true true annotEq]
	[fontNameSymbol fontSize 0 true true (    d = 0\260)]]
newpath stNull laNPole 0 0 posGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div stNull laNPole 0 262.5 posGap -1 mul findAlParallelArcLen exch sub ptShow

%%%
% Südlicher Sonnenwendekreis.
%%%

[[fontName fontSize 0 true true annotSTCircle]
	[fontNameSymbol fontSize 0 true true (    d = )] alSTCircleDV fontName fontSize strAngle]
newpath stNull laNPole alSTCircle 0 posGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div stNull laNPole alSTCircle 292.5 posGap -1 mul findAlParallelArcLen exch sub ptShow

%%%
% Ekliptik.
%%%

gsave colourEc setgray
[[fontName fontSize 0 true true annotEc]
	[fontNameSymbol fontSize 0 true true (    e)]
	[fontName fontSize gsSmallScale mul fontSize gsSubPosition mul true true (J`'findCYear(getVar(epoch)))]
	[fontName fontSize 0 true true ( = )] obEcDV fontName fontSize strAngle]
newpath raEc laEc 0 0 negGap -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth 2 div raEc laEc 0 315 negGap -1 mul findAlParallelArcLen exch sub ptShow
grestore % colourEc

%%%
% Milchstraße (Galaxis).
%%%

gsave colourGa setgray
[[fontName fontSize 0 true true annotGa]
	[fontNameSymbol fontSize 0 true true (    d)]
	[fontName fontSize gsSmallScale mul fontSize gsSubPosition mul true true (B1950.0)]
	[fontName fontSize 0 true true ( = )] deGaDV fontName fontSize strAngle
	[fontNameSymbol fontSize 0 true true (    a)]
	[fontName fontSize gsSmallScale mul fontSize gsSubPosition mul true true (B1950.0)]
	[fontName fontSize 0 true true ( = )] raGaDV fontName fontSize strTime]
newpath raGa deGa 0 0 negGap stdGap sub -1 mul pathAlDirRev 1 pathAlParallel
dup gsStringWidth raGa deGa 0 295 negGap stdGap sub -1 mul findAlParallelArcLen exch sub ptShow
grestore % colourGa

%%%
% Horizont.
%%%

[[fontName fontSize 0 true true annotHo]
	[fontNameSymbol fontSize 0 true true (    j = )] laHome convD2Ddv fontName fontSize strAngle
	[fontNameSymbol fontSize 0 true true (    Q = )] stHome convD2Tdv fontName fontSize strTime]
newpath stHome laHome 0 0 posGap pathAlDir 1 pathAlParallel
dup dup gsStringWidth stHome laHome 0 90 posGap findAlParallelArcLen exch sub stdGap sub ptShow
stHome laHome 0 270 posGap findAlParallelArcLen stdGap add ptShow

%%%
% Sonnenaufgang/Sonnenuntergang.
%%%

[[fontName fontSize 0 true true annotSunrise]
	[fontNameItalic fontSize 0 true true (    h)]
	[fontName fontSize 0 true true ( = )] alSunsetSunriseDV fontName fontSize strAngle]
newpath stHome laHome alSunsetSunrise 0 negGap pathAlDir 1 pathAlParallel
dup gsStringWidth stHome laHome alSunsetSunrise 100 negGap findAlParallelArcLen exch sub stdGap 2 mul sub ptShow
[[fontName fontSize 0 true true annotSunset]
	[fontNameItalic fontSize 0 true true (    h)]
	[fontName fontSize 0 true true ( = )] alSunsetSunriseDV fontName fontSize strAngle]
stHome laHome alSunsetSunrise 260 negGap findAlParallelArcLen stdGap add ptShow

%%%
% Bürgerliche Dämmerung.
%%%

[[fontName fontSize 0 true true annotCivilTwilight]
	[fontNameItalic fontSize 0 true true (    h)]
	[fontName fontSize 0 true true ( = )] alCivilTwilightDV fontName fontSize strAngle]
newpath stHome laHome alCivilTwilight 0 posGap pathAlDir 1 pathAlParallel
dup gsStringWidth 2 div stHome laHome alCivilTwilight 170 posGap findAlParallelArcLen exch sub ptShow

%%%
% Nautische Dämmerung.
%%%

[[fontName fontSize 0 true true annotNauticalTwilight]
	[fontNameItalic fontSize 0 true true (    h)]
	[fontName fontSize 0 true true (  = )] alNauticalTwilightDV fontName fontSize strAngle]
newpath stHome laHome alNauticalTwilight 0 posGap pathAlDir 1 pathAlParallel
dup gsStringWidth 2 div stHome laHome alNauticalTwilight 180 posGap findAlParallelArcLen exch sub ptShow

%%%
% Astronomische Dämmerung.
%%%

[[fontName fontSize 0 true true annotAstronomicalTwilight]
	[fontNameItalic fontSize 0 true true (    h)]
	[fontName fontSize 0 true true ( = )] alAstronomicalTwilightDV fontName fontSize strAngle]
newpath stHome laHome alAstronomicalTwilight 0 posGap pathAlDir 1 pathAlParallel
dup gsStringWidth 2 div stHome laHome alAstronomicalTwilight 190 posGap findAlParallelArcLen exch sub ptShow

grestore % fontName
end % annotationDict
%!! ENDE: Anwendung.

grestore % Outmost.

end % astrolabeDict
end % ghostscriptDict
end % pathtextDict
end % generalDict

showpage

%%Trailer
%%DocumentFonts: Helevetica Symbol Times
%%Pages: 1

